
{#Assim consigo criar uma variavel extendendo o padrao de dentro do basse#}
{% use 'form_div_layout.html.twig' with form_label as base_form_label %}


{#Dentro de form_div_layout.html.twig, base para os layouts#}
{#existes os codigos prontos, aqui estamos sobreescrevendo eles#}
{#utilizando o bootstrap para realizar a formatação#}

{#Sobrescrevendo a formatação com as classses do boostrap form group#}
{% block form_row %}
    {% spaceless %}
        <div class="form-group {{ errors|length > 0 ? "has-error" : "" }}">
            {{ form_label(form) }}
            {{ form_errors(form) }}
            {{ form_widget(form) }}
            {% if help is defined and help %}
                <div class="help-block">{{ help }}</div>
            {% endif %}
        </div>
    {% endspaceless %}
{% endblock form_row %}

{#Sobrescrevendo as mensagens de error do form para usar bootstrap#}
{% block form_errors %}
    {% if errors|length > 0 %}
        <ul class="help-block">
            {% for error in errors %}
                <li>{{ error.message }}</li>
            {% endfor %}
        </ul>
    {% endif %}
{% endblock form_errors %}

{#Outra classe dentro do form#}
{% block form_widget_simple %}
    {% spaceless %}
        {% set attr = attr|merge({ 'class': (attr.class|default('') ~ ' form-control')|trim }) %}
        {% set type = type|default('text') %}
        <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
    {% endspaceless %}
{% endblock form_widget_simple %}


{#consigo utilizar a variavel com os compents do base#}
{% block form_label %}
    {# Adicionando classes ao codigo ja existente #}
    {% set label_attr = attr|merge({ 'class': (attr.class|default('') ~ ' control-label')|trim }) %}
    {{ block('base_form_label') }}
{% endblock form_label %}